CREATE TABLE exp_goods_asia( -- 한국과 일본의 10대 수출품 테이블
    country VARCHAR2(10), -- 나라명
    seq NUMBER, -- 번호
    goods VARCHAR2(80) --상품명
);
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 1, '원유제외 석유류');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 2, '자동차');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 3, '전자집적회로');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 4, '선박');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 5, 'LCD');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 6, '자동차부품');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 7, '휴대전화');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 8, '환식탄화수소');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 9, '무선송신기 디스플레이 부속품');
INSERT INTO  EXP_GOODS_ASIA VALUES ('한국', 10, '철 또는 비합금감');

INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 1, '자동차');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 2, '자동차부품');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 3, '전자집적회로');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 4, '선박');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 5, '반도체웨이퍼');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 6, '화물차');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 7, '원유제외 석유류');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 8, '건설기계');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 9, '다이오드, 트랜지스터');
INSERT INTO  EXP_GOODS_ASIA VALUES ('일본', 10, '기계류');

COMMIT;

-- UNION(합집합)
SELECT GOODS
FROM EXP_GOODS_ASIA
WHERE COUNTRY = '한국'
UNION
SELECT GOODS
FROM  EXP_GOODS_ASIA
WHERE COUNTRY = '일본';


SELECT EMPLOYEE_ID, JOB_ID
FROM EMPLOYEES
UNION
SELECT EMPLOYEE_ID, JOB_ID
FROM JOB_HISTORY;

-- UNION ALL (합집합이나 중복된 항목도 모두 조회한다.)
SELECT GOODS
FROM EXP_GOODS_ASIA
WHERE COUNTRY = '한국'
UNION ALL
SELECT GOODS
FROM  EXP_GOODS_ASIA
WHERE COUNTRY = '일본';

-- INTERSECT (교집합, 공통된 항목만 추출한다.)
SELECT GOODS
FROM EXP_GOODS_ASIA
WHERE COUNTRY = '한국'
INTERSECT
SELECT GOODS
FROM  EXP_GOODS_ASIA
WHERE COUNTRY = '일본';

-- MINUS (차집합, 공통된 항목을 제외한다.)
SELECT GOODS
FROM EXP_GOODS_ASIA
WHERE COUNTRY = '한국'
MINUS
SELECT GOODS
FROM  EXP_GOODS_ASIA
WHERE COUNTRY = '일본';

--  집합연산자의 제한사항
--  집합연산자로 연결되는 각 SELECT 의 SELECT 리스트의 개수와 데이터 타입은 일치해야 한다.
--  집합연산자로 SELECT 를 연결할 때 ORDER BY 는 맨 마지막 문장에서만 사용할 수 있다.
-- UNION, INTERSECT, MINUS 는 LONG형 컬럼에는 사용할 수 없다.

-- GROUPING SETS
-- ROLLUP 이나 CUBE 처럼 GROUP BY 에 명시해서 그룹 쿼리에 사용하는 것.
-- 그룹쿼리이기 하나 UNION ALL 개념이 섞여 있다. 형태 확인을 해야 한다.

SELECT  DEPARTMENT_ID, JOB_ID, COUNT(*), SUM(SALARY)
FROM  EMPLOYEES
GROUP BY GROUPING SETS ( DEPARTMENT_ID, JOB_ID )
ORDER BY DEPARTMENT_ID;

-- GROUP_ID
-- ROLLUP 이나 CUBE 처럼 GROUP BY 에 명시해서 사용.특정 열이 그룹화되었는지를 출력한다.
-- 그룹화 비트벡터로 결과를 나타낸다.
SELECT DEPARTMENT_ID, JOB_ID, COUNT(*), SUM(SALARY),
       GROUPING(DEPARTMENT_ID),
       GROUPING(JOB_ID),
       GROUPING_ID(DEPARTMENT_ID, JOB_ID)
FROM  EMPLOYEES
GROUP BY CUBE (DEPARTMENT_ID, JOB_ID)
ORDER BY DEPARTMENT_ID, JOB_ID;
