-- 뷰

CREATE TABLE EMP01
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01
WHERE DEPARTMENT_ID = 30;

-- 뷰 생성
CREATE VIEW VIEW_EMP01
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01
WHERE DEPARTMENT_ID = 10;

-- 뷰 딕셔너리
SELECT VIEW_NAME, TEXT
FROM USER_VIEWS;

SELECT *
FROM VIEW_EMP01;
-- 단순 뷰에 대한 데이터 조작
INSERT INTO VIEW_EMP01
VALUES (200, 'ANGEL', 7000, 10);

-- 단순 뷰의 칼럼에 별칭 부여하기
CREATE OR REPLACE VIEW VIEW_EMP
AS
SELECT EMPLOYEE_ID 사원번호, FIRST_NAME 사원명, SALARY 급여, DEPARTMENT_ID 부서번호
FROM EMP01;

CREATE OR REPLACE VIEW VIEW_EMP(사원번호, 사원명, 급여, 부서번호)
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01;

SELECT *
FROM VIEW_EMP;
-- 그룹 함수를 사용한 단순 뷰, 물리적 칼럼이 존재하지 않기에 사용자가 반드시 이름을 따로 설정해 주어야 한다.
CREATE VIEW VIEW_SAL
AS
SELECT EMPLOYEE_ID, SUM(SALARY) AS "SalSum", AVG(SALARY) AS "SalAvg"
FROM EMP01
GROUP BY EMPLOYEE_ID;

SELECT *
FROM VIEW_SAL;

-- 복합뷰
-- 두 개 이상의 기본 테이블에 의해 정의한 뷰
CREATE VIEW VIEW_EMP_DEPT
AS
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
         INNER JOIN DEPARTMENTS D
                    ON E.EMPLOYEE_ID = D.DEPARTMENT_ID
ORDER BY DEPARTMENT_ID DESC;

SELECT *
FROM VIEW_EMP_DEPT;

-- 뷰 삭제
-- 뷰는 실체가 없는 가상 테이블이기 때문에
-- 뷰를 삭제한다는 것은 USER_VIEWS 데이터 딕셔너리에 저장되어 있는
-- 뷰의 정의를 삭제하는 것을 의미한다.
SELECT VIEW_NAME, TEXT
FROM USER_VIEWS;

DROP VIEW VIEW_SAL;

-- 뷰 수정을 위한 OR REPLACE 옵션
-- CREATE VIEW 대신 CREATE OR REPLACE VIEW를 사용하면
-- 존재하지 않은 뷰이면 새로운 뷰를 생성하고
-- 기존에 존재하는 뷰이면 그 내용을 변경한다.
CREATE OR REPLACE VIEW VIEW_EMP10
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01
WHERE EMPLOYEE_ID = 10;

SELECT VIEW_NAME, TEXT
FROM USER_VIEWS;
-- 기본 테이블 없이 뷰를 생성하기 위한 FORCE 옵션
-- 기본 테이블이 존재하지 않더라도 뷰를 생성?? 필요할 때
CREATE OR REPLACE FORCE VIEW VIEW_NOTABLE
AS
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID
FROM EMP15
WHERE EMPLOYEE_ID = 10;

SELECT VIEW_NAME, TEXT
FROM USER_VIEWS;

-- WITH CHECK OPTION
-- 뷰 생성시 조건으로 지정한 칼럼 값은 변경하지 못하도록 한다.
CREATE OR REPLACE VIEW VIEW_CHK
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01
WHERE DEPARTMENT_ID = 20
WITH CHECK OPTION;
-- 조건으로 인해 아래 내용은 오류 발생
UPDATE VIEW_CHK
SET DEPARTMENT_ID = 10
WHERE SALARY >= 5000;

-- WITH READ ONLY
-- 뷰를 통해서는 기본 테이블의 어떤 컬럼에 대해서도 내용을 절대 변경할 수 없도록 한다.
CREATE OR REPLACE VIEW VIEW_READ
AS
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID
FROM EMP01
WHERE DEPARTMENT_ID = 30
WITH READ ONLY;
-- 읽기 전용 뷰이기에 작업을 수행할 수 없다. 오류
UPDATE VIEW_READ
SET DEPARTMENT_ID = 1000;

-- 뷰 활용
-- ROWNUM은 오라클 내부적으로 부되는 번호로
-- INSERT 문에 의해 입력한 순서에 따라 1씩 증가되면서 값이 지정된다.
SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES;

SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
ORDER BY HIRE_DATE;
-- 입사일 기준으로 정렬했는데도 값이 바뀌지 않는다.
-- 데이터가 입력된 시점에서 결정된다.
-- 새로운 테이블에 입사일 기준으로 결과를 저장하면 ROWNUM이 1부터 부여된다.

CREATE OR REPLACE VIEW VIEW_HIRE
AS
SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
ORDER BY HIRE_DATE;

SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM VIEW_HIRE;

SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM VIEW_HIRE
WHERE ROWNUM <= 5;

-- 인라인 뷰로 TOP-N 구하기
SELECT ROWNUM, EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
FROM (SELECT EMPLOYEE_ID, FIRST_NAME, HIRE_DATE
      FROM EMPLOYEES
      ORDER BY HIRE_DATE)
WHERE ROWNUM <= 5;


-- 문제 1
-- 사원 번호와 사원명과 부서명과 부서의 위치를 출력하는 뷰(VIEW_LOC)를 작성하라.

CREATE OR REPLACE VIEW VIEW_LOC
AS
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
     DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT VIEW_NAME, TEXT
FROM USER_VIEWS;
-- 문제 2
-- 30번 부서 소속 사원의 이름과 입사일과 부서명을 출력하는 뷰(VIEW_DEPT30)를 작성하라.
CREATE OR REPLACE VIEW VIEW_DEPT30
AS
SELECT E.FIRST_NAME, E.HIRE_DATE, D.DEPARTMENT_NAME
FROM EMPLOYEES E,
     DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
  AND E.DEPARTMENT_ID = 30;

-- 문제 3
-- 부서별 최대 급여 정보를 가지는 뷰(VIEW_DEPT_MAXSAL)를 생성하라
CREATE OR REPLACE VIEW VIEW_DEPT_MAXSAL
AS
SELECT DEPARTMENT_ID, MAX(SALARY) AS MAXSAL
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;
SELECT *
FROM VIEW_DEPT_MAXSAL;

-- 문제 4
-- 급여를 많이 받는 순서대로 3명만 출력하는 뷰(VIEW_SAL_TOP5)를 작성하라.
CREATE OR REPLACE VIEW VIEW_SAL_TOP5
AS
SELECT ROWNUM RANK, EMPLOYEE_ID, FIRST_NAME, SALARY
FROM (SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
ORDER BY SALARY DESC)
WHERE ROWNUM <=3;
SELECT *
FROM VIEW_SAL_TOP5;

